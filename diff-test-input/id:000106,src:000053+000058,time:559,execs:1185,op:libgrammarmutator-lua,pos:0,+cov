debug, string, table = ..., function () b = (false), ((false)^function (d, a) if {} then for os=e, {}, (false) do local utf8 = (-[[a	/00

\r	]]);  end;  else function G () c""; e = {}; local b, table, e, string = function (b) e""; break;  end; e = utf8; d(); end; return ((1e-30));  end; return ((true)*(nil));  end); return (({{(nil),(-( function (...) for self=[[]], (string), (#(((table : asin[[]])-(-function () function self:lines (...) e : pi{write=(3.37e24)}; end; return (0xC);  end)))) do if ... then local package, utf8 = ...; for c=(table<=[[]]), ..., ... do string = ((83e-4)); return (((#...))/math);  end;  end; math : loaded[[]]; local d = ""; function string.debug (os) e(); b : G(); end;  end; return ..., (-{(#(-...)),math});  end ){[( "a" )((0xf))]=(io-[[]]),select=(true)})}}));  end; math[[]]; 