function math:os (d, table, ...) function table.write () math = d, (31e6); while ({}) do while ((false)) do for table=(-function (math, package) a{}; break;  end), "
.
", {} do local b, e = ( b{pi={e}} )"0"; function G () b = d; c(); end; e(...); self{}; d = (true); d = [[\a\z
\z]]; break;  end; if {[string]=((#...)~=( not (true)))} then repeat b : sub{};  until ("");  else function G (b) c, e = "", (nil); end; c""; local a = b, b, e; c{b}; break;  end;  end; return (0xc), (io), io;  end; local utf8 = (true), (2e-36), (0xdf), utf8, b; package""; end; repeat b{}; local a = (true), (false);  until ((nil)); ( (nil) ){}; a, self = {[(#(-{}))]=self,[({stdin=a})]=(false),setlocale=function () local d = (a); return ...;  end,deg=(0xbb5b)}, (false), ..., {[( not [[]])]=(false),[(false)]=([[a\n]]),move=(0xD)}, function () local a, self, math, c = (""); function pi () function close () local string = ({{},a}), {[d]=...}; end; end; e{}; function self.rawset (...) c""; break; end;  end; end; break; 