while (((nil)==d)) do local c = (a or self); return [[$]], (-[[/]]), (function (...) local string, package, utf8, a, c = ([[]]), os; if (false) then if (true) then local math = (nil), c, table : deg({sub=function () io();  end}, (-{}), a), debug(), {}, a, a; return (false), function (utf8, b) do function package.utf8 () function rawequal (string, string) if {pi=a,tointeger=b,io} then c = b; break;  end; math, debug = c, io; end; return (true); end;  end;  end, (-function () if ([[	
$]]) then if (math : flush(( (70e9) ) : stdout{}, b, {[c]=e}, (true)) or ...) then a(((nil)~=(7977.4e7382)), (false)); function table:stderr (string) ( (b) )[[]]; end; for self=((false) and ("")), ..., ( not [[ ]]) do do table = c, (0);  end; utf8, utf8 = (-c), (0xEE), ((nil)); b(); io = (-e : rad{});  end; local math, e = (true), (true), (#(false));  end;  end; local d, string = ( (false) ) : tmpname{[({})]=((-b)>=[[0]])}; function a.G () io(); end;  end);  end;  end; function sub () repeat a(b); break;  until ((true)); break; end;  end-((false)%((nil)))), (((#(895e-5))));  end; function os.charpattern () local c = [[]], (nil), (true); break; end; if (true) then if (math%{[(((...)>=( (nil) ) : getenv((#"/"), (false), (true), ((2.29)+[[\r. ]]))))]=(nil)}) then math : wrap[[	\t]];  end;  end; return "\aa.$"; 