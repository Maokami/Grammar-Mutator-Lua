debug, string, table = ..., function () b = (false), {[(0xd6)]=(nil)}; return (({{(nil),(-( function (...) for self=[[]], (string), (#(((table : asin[[]])-function (package, math, c, e, a, ...) if (#(true)) then local a = [[]], b : loadfile"$

"; break;  else debug, e, debug = ( ( ... )[[$]] )(); local utf8, e, io = (false), (( not "	/")==(false)); function c.reverse () local os = ..., c, ((nil)); end; ( ... )(...); ( {} )(); local os = (0xf); while ((true)) do self, d = os; if self{} then if "" then c = b(a); break;  end; os = e; break;  else self = (7); ( ((nil)) )(); local self = (0xf); return function (e, c) local d = (b-b), "";  end;  end; local os = (#debug[[0\t]]);  end; break;  end; return (( {(false),[(false)]=(false)} ) : __eq());  end))) do if ... then local package, utf8 = ...; for c=(table<=[[]]), ..., ... do string = ((83e-4)); return (((#...))/math);  end;  end; math : loaded[[]]; local d = ""; function string.debug (os) e(); b : G(); end;  end; return ..., (-{(#(-...)),math});  end ){[( "a" )((0xf))]=(io-[[]]),select=(true)})}}));  end; math[[]]; 