debug, string, table = ..., function () b = (false), {[(0xd6)]=(nil)}; return (({{(nil),(-( function (...) for self=[[]], (string), (#(((table : asin[[]])-(-function () function self:lines (...) e : pi{write=(3.37e24)}; end; return (0xC);  end)))) do if ... then local package, utf8 = ...; for c=(table<=[[]]), ..., ... do string = ((83e-4)); return (((#...))/math);  end;  end; math : loaded[[]]; local d = ""; function string.debug (os) e(); b : G(); end;  end; return ..., (-{(#(-...)),math});  end ){[( "a" )((0xf))]=( function (b, math, ...) a = a, os, (0xfA); function asin () c(); return d; end; string = io : len[[]], "", ([[]] or (0xC)); ( function () function pi () os, b = (nil); end; c(d); c("");  end )(); utf8 = (3.9e-7), (3); return function () for debug=..., {""}, a : ult(..., ((nil)), (...)) do e : G(b); b : G""; a = (2);  end; function b:offset (...) a = c; a = e; break; end; while ((true)) do math, c, io = io : G(), [[]], (nil), {}; local debug, self, debug, math = (-(35e3)), {}; local b, d = io : atan(); ( e )(""); break;  end; ( (1) )((nil)); math : codes();  end;  end ) : rawset(),select=(true)})}}));  end; math[[]]; 