for os={""}, (0e-4), ("") do b : pi(); return function (...) repeat b({});  until (c);  end, b"";  end; if {[table]=(true),[a]=function () function d.input (...) if "" then if ((true)>=(true)) then a : exit[[]]; do c = a;  end; c = {}; b{}; return (true), function (...) a : tmpname(); ( (""*{read=(b{}),rad=(true)}) ) : match();  end;  else ( [[]] ){(-package)};  end; function io:type () c[[/]]; if e then local math = (64e55053), "/"; return io, math;  else c = c; break;  end; local b, self = ( (true) ) : type([[]]); end; for e=b, [[]], c : char("") do do b(""); break;  end; return (#function (os) c();  end), e : char(a, e : G"", (a)), b, d;  end; e = "
//";  else local os, d, d = (nil); function concat (...) a, a, math = (#(8e-03)), ( not c{}), ( [[]] ){getenv=...}; a, d, package = c; return ((#"")), [[.]]; end;  end; end;  end} then while (((false))) do function b.difftime (c) while ("") do function d:G (b, e, c) d({}); os = c; return os; end; do e{}; b"";  end;  end; break; end;  end;  end; math = (nil); do local os, table = function (...) d();  end, ( ... )"", self((nil)), {(nil)}; local utf8, a, math, b = (nil); ( (({( ... ){getregistry={G="",c,b},((-((e>a)/(-debug)))),[a]=e{{}}},{ceil=(-...),( (#(0x7)) )"0
$"}}) or (function (math) io : rep(); return e;  end<(0xac))) ){};  end; 