local table, string, io, package, table, d = ((nil)); if {gsub=table,[""]=((false)<=(#(false)))} then while ((80)) do for self=[[]], b, [[/]] do if (nil) then repeat d : G[[]];  until (a[[\r]]);  end; c, c = string;  end;  end; return [[/$a]], (#...);  end; local os, io = (false), {}, ( not a), (0xbe); while ((#( ((true)~=...) )())) do string = (nil), (nil), (true); repeat for b=b, ({}), {} do a, c = b; a = a; break;  end;  until ((true)); function a:os (math) ( [[]] )(); end;  end; local math = (function (c, a, io) if (true) then e, os = b, d; return ( not ( not (nil)));  else function G (...) if b then e(d, d{});  end; b{}; end; break;  end; a = e; function __add () b(); a, c = c; do a".$";  end; b : G(); break; end;  end); function codes (...) b = ""; local self = ([[]]), (nil); break; end; 