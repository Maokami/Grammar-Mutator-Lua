while (string) do do local c, d = (nil); os : write{}; e = e, (0xBc); if ((b>b)<d) then do c = ...;  end;  end; break;  end; function os () local debug, string, io = [[]]; if {[""]=((false)<(nil))} then d = {}; return (2);  else d(); return a;  end; end; break;  end; function math.pack (package) function find (io, ...) function resume (debug) if e then d = a;  end; end; if {} then a, os = c;  else function G () e""; os{}; end; b, os = b{};  end; end; ( function (d) self = c, (nil);  end ) : running(( not (utf8>=(true))), ""); return ( [[\b]] ) : codes(), [[]], "", {(2e4),status=(e : __unm"...0.
.")}, (nil), {[( not {[os]=(nil),require=(85e35)})]=c(),wrap=(...<=((nil))),[( not (false))]=self}, (true); end; function atan (...) local e = debug; e(); d : ipairs(d, (2)); d, io = c, b; return ( ((91)) ){( not (nil))}; end; local os = (true); ( {"",d} )[[]]; 