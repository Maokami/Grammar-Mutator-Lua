do d = {}, (0xc); function input (c, b) ( (false) ){}; a{[{}]=(false)}; function b:setupvalue (package, os, ...) repeat function pi () e : sub{}; end; break;  until (function () b = "", c; ( (-a) ) : setvbuf((true), (true)); b{};  end); end; end; e, os, io = ((nil)); local e = (92), io; if ("" .. e{}) then a(); break;  else e = d;  end;  end; return function () if debug then local c = b;  end; if (nil) then do e(a);  end; break;  end; return (math : lines{[a]={(utf8),abs=(nil),{[(6e0)]="
",(true)},(nil)},lower=(function (c, ...) for math=((c)/(c+{a})), math, ( not (true)) do os[[]]; math, c, b = (5), c; break;  end; break;  end)}/(false)), function (...) do d : G{}; if {} then b();  end; repeat local e = c; d = {[b]=("	a")};  until (c);  end; c = {}; if "" then a = c; io"";  end; b{}; math, c = d, (2.784e-6); break;  end;  end; 