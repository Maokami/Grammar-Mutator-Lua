package = (-([[$	\z]]<function (self, package, a, ...) for math=(nil), package, (nil) do do if (false) then if ... then if {} then c = "";  else d(e);  end; local c = (((true))); ( "/a" )("\ra/"); while (debug) do io();  end;  end; break;  end;  end; while ({}) do do d = b; return function (...) if {} then for d=b, c, c do c();  end; return (true), (0xB9bC);  else do c = " "; return {}, c;  end; repeat do d = a; break;  end;  until ((0xdd));  end; return ..., (0xF);  end, utf8, ( not (io>=function (math, utf8) e(); break;  end)), {}, (0xFda);  end; return (false);  end; return (0xf), [[]];  end; while (utf8) do ( io ) : gethook{format=...}; d = {a}; if function () table = ([[]]^(nil)), (2e-49), (true), (true); return (((true)<=(function () string{}; return (nil);  end>...)));  end then a();  end;  end;  end)); return ( not (true)); 