( math ){package : unpack(function (...) c(); ( (b) ) : config{}; ( (false) )(); if (((nil) or {[b]=b,[c]=(90)})) then while ([[]]) do a();  end;  else d = table;  end; return {}, (nil);  end, debug : sqrt())}; do if package then local os, utf8, string, c, table, math = (true), (nil); function self:stdin (d) function G (package) os = c, d{}, io; end; os = "0", (false), (5); end;  end; return (true), (false), (true), (#(0.0e-9)), ".";  end; function e:load () do io();  end; for a=(false), b : gsub(), ( function () while (...) do e : read{}; local b, table, io, self = ( not ""); return ((true));  end;  end )(..., (false)) do function dofile () self = (nil), (0xA); return (((( b )()<=function (self) os = {}, (6); return b;  end))-(0xEd7)), (nil); end; for string=(true), ({b}%os()), {b} do d = (nil); return (nil);  end;  end; return ((nil)<=d : sethook[[/
]]); end; 