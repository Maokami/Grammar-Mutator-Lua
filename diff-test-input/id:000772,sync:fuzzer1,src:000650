utf8[[]]; if [[]] then ( ( not (2)) ) : setmetatable(math);  else while ("") do ( ((96.269)<=( (#...) )((58.8e2603), function (package) local string = (true), [[]], (77.6e-40); return {}, io, ({} and ((((( function () ( (#(true)) )(...);  end )"	.")) and io)%(false)));  end)) )(); return table, (0xCb), (#"$"), (nil), (7), string;  end; function package:randomseed (...) repeat ( {} ) : gsub{}; d, c = a, a; a""; break;  until (self{}); end; for debug=(nil), (true), (8360.51e37) do do d[[]]; return (false);  end; if io() then ( a )"/"; b = {}; local b = e;  else a""; a(); break;  end; return function () local table, d = ({}); if io then a, c = "./";  end; break;  end;  end; local debug = ((nil) and (nil)); os, b = [[]], ((35)), (-[[]]), (false); for a=(false), (-[[\f]]), (5e5) do c(c); io, utf8, e = (#(((0xfAF)))), "
";  end; if (utf8<=function () local io = e, {c()}; b = a; a = {}; return ..., io;  end) then e = ..., (false); break;  else b = (d); return function () d(b); break;  end;  end;  end; local self, package, a = (true); function debug:__le () function remove () if function () ( (false) )((false), (0xd));  end then for a=b : G"", io : G(c, c), (false) do d, os = {}, {}, {}; local table = ("">={});  end;  else do utf8 = "";  end; break;  end; if c then utf8 = d, d;  end; end; c(); end; do if b then c = "";  else e(); e{};  end; do do e(io"");  end; return ((false)%(true)), ( (true) )((-( (c : pi()) ){}), c);  end;  end; a = (true), (-...), (false); function e.len (b, c, os, ...) utf8 = ((( not (true)))), (0xe); end; 