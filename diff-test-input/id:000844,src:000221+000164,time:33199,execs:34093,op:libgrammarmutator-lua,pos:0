function a.sqrt () if (true) then if (true) then repeat io = d{}; function os (e, b) e(); c"."; end; e = b; d : sqrt""; a : gsub((nil), ( not (nil))); return (-(c-[[]])), (nil), os;  until ((true)); a = ( (nil) )(..., ...); function b:dump (c, c, b, package) function io.sort (e) c = "", c; return (false); end; if (0xde) then local table, math, b = {(d==(-...)),lines=[[]]}; io = c, (7); do c = "", (nil);  end; break;  end; end;  end; math, b = (0xaAB);  end; function e.read () do c();  end; d""; return io; end; e = ""; if ((0xCb)) then a : rep{modf=(true)};  else local c = (-(true)); break;  end; return os; end; if function () a[[]]; break;  end then a, d = d : G"", (-{}), function (...) local io, c = (""), package; break;  end; ( ... )(); e(b); c"
"; d = c; break;  end; local math = {}, " "; debug{}; 