do if {[c{}]=((nil)+(function (...) io();  end~=( (false) ){abs=(0xFD),[...]={status=(false)},[[a]],({})}))} then if (-((nil)*(false))) then os(); e(); return {};  end; return (false), {sub={(true),exp=(false),cos=...},b,G=e}, debug, (#...), (0xc), table[[]], (false);  else if [[]] then e : G(); return (38), (false);  end; c[[.]];  end; function d:modf () function e:G (utf8) c : pairs{}; os, os, b, os = debug, os; end; ( b{} ) : G{b(a)}; function b:sqrt () b : pack(); end; do function b:G (d) e""; return {}; end; for b=(e>=(nil)), "", (d/os) do e{}; d{};  end; break;  end; break; end; d, os = {}, {}, string; if (8) then b{a};  end; function input () d""; break; end; c, e, b, package = (false); return {};  end; 