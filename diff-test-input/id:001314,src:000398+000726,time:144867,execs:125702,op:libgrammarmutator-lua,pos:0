( (false) )((1)); local io = (033.3), string, ( not ({})); function d.upper (d, ...) repeat local c = e, c, a, (nil); for os=..., a, "" do debug = e; break;  end; b : G[[/]];  until (function (a, ...) b(); c = "";  end); self = (0x7D); repeat d(); e = {}; break;  until ((-utf8)); repeat local b = (7e44); local self = (( {""} ) : upper()), (false);  until ((-function (...) os = ( ... ) : sort(); local b, string = ...;  end)); package = (true), (nil); function io:log (math, utf8) io : date(); if {} then repeat io = {}, utf8, math[[
]]; local b = (false); return (nil);  until ((false)); return (false);  end; utf8 = (0xBE), (0xbB); function packsize () local d, d = [[
]]; local os, package, os, utf8, e = (false), ((0xd)), [[/$]]; end; ( ((true)%self) )(); end; a = {(true)}; function abs () local e = (((false)) .. (false)), self; end; end; 