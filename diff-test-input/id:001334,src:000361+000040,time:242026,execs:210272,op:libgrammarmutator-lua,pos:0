a = (-function (e, d) c, io, table, self, string, os, table, debug, utf8, math, e, io = function (...) b : create(); while ({...}) do e{};  end; break;  end, (9.3e-5); function io:floor () repeat do string((-(false)), d, (-a), (true), b, (false)); if [[]] then b();  else os{};  end;  end;  until (((#(nil)))); string, e, os = {}; if ... then d = ..., (#((((#(nil))-(0))<={pack=(((-({}*""))))}))); if ... then for package=[[]], self, (false) do string" 0a";  end; do c{}; break;  end;  end; e = {}, "", ...; return (0xce);  end; end; local d = os, (""), (false); break;  end); 