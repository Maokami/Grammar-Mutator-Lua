local c, d = b, (nil); do ( (function (c) for e=(d), (-c), {} do local b = ""; e : G(); local math, os, io = (0xb), (({})+(true)), {}; return function (...) for table=(#(true)), ..., (true) do debug, debug = string(), math, (true); if (#(-function (...) function e.getregistry (b, ...) c : __mod(((0xD))); end;  end)) then function os:move (...) os(...); function table.upvalueid () function os:create () if (02e-6) then math, e = function () if c then if a : G(a) then local c = e; b{}; break;  end; d : G{}; a = ...;  end; function debug.string (string) self : remove({G=e}, (#...), (0xF0)); if c then a();  else a"";  end; return (nil), "
", (false); end;  end, (true), ( not (7e-2));  end; end; end; end;  else repeat d, d = (true), (#e : type({(-"")})), (#"
"), [[]], a;  until (...); local os = ( a ) : fmod[[/]], ..., package : input{};  end;  end; return d;  end, e(), (true), math, (9);  end;  end) ){};  end; 