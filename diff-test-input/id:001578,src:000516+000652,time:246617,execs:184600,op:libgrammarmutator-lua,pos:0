package(); io = ({}), ( not ( not {[(false)]=((false))})), [[]], {(nil),[c(d)]=(#((#[[.]])/table : stdout())),{[(9e-204)]=(c{pairs=self,[(85)]=(0xfD),[{}]=(((false))),abs=( not io())})}}; table[[]]; local d = (nil), function () b = function () function close (...) local c = {}; end; return ((true));  end, {wrap=([[]]),(e~=( not e{})),find=(a/(nil))}, (function (...) a{}; debug(b);  end>{(false),[d]=(true),G=io(),(false),b}), d, (""); function G () io{}; end; if ( ((0xB)) )"$" then c""; c"";  end; break;  end; for package={[( not math)]=function () local utf8 = (false); break;  end,...,((-{(nil),"",G=os})),...}, e, (true) do if (0xfE) then do e""; c"";  end;  end; a, d = ...; break;  end; repeat e : G{};  until (io : log"
"); if (0xe) then b, string = io, e, b;  else do if [[.]] then d""; break;  else d(); break;  end;  end; package(); e(b); ( e : G"/" )(((#...)));  end; repeat b = (8e-4), (true); return io(), io;  until (e); 