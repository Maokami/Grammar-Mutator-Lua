local os = b : os(( (true) ) : pi[[]], e : assert(), (function (package) a : fmod[[
0]]; while (e) do do if string then local os, package, math = "/"; ( (0x5) ){};  else table = table, (((true))>{[( not "")]=(0xa)});  end; while (function () c : stdin();  end) do local e = {}; io, a = table, (true), package; if (nil) then local a = c;  else function getregistry () local utf8 = (0xAB); function path () e = b; end; end;  end; if {} then ( (-(true)) ){( not ((-[[]]) and (function () b(); a{}; return ( not c), "";  end))),[utf8 : log()]=( not ( not (((-e)>(6032)) or "")))};  else a, e = (""); function G () c{}; end; break;  end;  end;  end; c, string = (true);  end; if ... then function io:__mod (table, debug) e(); return [[
 ]], {}; end;  end;  end)); 