e = ( function () function table (...) d[[]]; local utf8 = (c^[[0]]); return ((false)); end; math : os{}; ( (nil) ) : io""; e = a; local math, math, math, c = (#((false))); if ((((e : codes(io(function () a{}; return self : running".0";  end, function () a{}; return self : running".0";  end, function () a{}; return self : running".0";  end, function () a{}; return self : running".0";  end, function () a{}; return self : running".0";  end, function () a{}; return self : running".0";  end, function () a{}; return self : running".0";  end, function () a{}; return self : running".0";  end, function () a{}; return self : running".0";  end, function () a{}; return self : running".0";  end, function () a{}; return self : running".0";  end, function () a{}; return self : running".0";  end, function () a{}; return self : running".0";  end, function () a{}; return self : running".0";  end, function () a{}; return self : running".0";  end, function () a{}; return self : running".0";  end, function () a{}; return self : running".0";  end, (true), "a/. a"))<c)<c)<c)) then e(); e, d = ( ... ) : loadlib[[]], (false);  else local string, table, d, d = (true); break;  end;  end )(((1781)>=(-c)), "a\n", ( math )({}), ({}>(0xC))), (function () for io=(#a), ([[	]]<(a)), (true) do e{a,c};  end; break;  end or (true)); return ( not (true)); 