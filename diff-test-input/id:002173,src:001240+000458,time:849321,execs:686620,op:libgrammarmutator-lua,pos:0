function min () self, d = (58.2), package, (d>=[[]]); io = [[]], (94.26e8); if (#(true)) then b((true)); function d.path (...) math, d = ..., function (e, ...) function pack () e(); return (4e7); end; function pack () e(); return (4e7); end; function pack () e(); return (4e7); end; function pack () e(); return (4e7); end; function pack () e(); return (4e7); end; function pack () e(); return (4e7); end; function pack () e(); return (4e7); end; function pack () e(); return (4e7); end; function pack () e(); return (4e7); end; function pack () e(); return (4e7); end; function pack () e(); return (4e7); end; function pack () e(); return (4e7); end; function pack () e(); return (4e7); end; function pack () e(); return (4e7); end; function pack () e(); return (4e7); end; function pack () e(); return (4e7); end; function pack () e(); return (4e7); end; b[[]];  end; local os = ""; function pi (package, package) function getenv (e, c) b(e); end; io : G""; b(); end; end; d = ((false)); local d, c = os; ( {} ){}; c = (c); do os{};  end;  end; do a{__eq=(((( not d)) .. (true))),__unm=([[]]^[[]])}; return (0xfE), (true);  end; end; local table, debug = function () repeat while ({}) do e = d, {}; d = (e); break;  end; math : pi{}; local e = ""; return c : tmpname{};  until ((0xC));  end; function e.codes (...) if {} then table(); if (false) then local utf8, utf8 = (false); package = c, (-a), "", (0xC);  end; return ..., (#(io));  end; debug = (nil); end; 