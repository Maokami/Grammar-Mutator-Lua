( [[a]] ) : sub(((0x9)%(19e-3043))); ( function (...) local d, table = (-(-...)), function (a) function __concat () repeat e = io;  until ((false)); end; function e.load (string, ...) os, b, a = utf8; if os then d = self, {}; return (true);  else for io=(1), (0xC), ({}+(nil)) do if "" then d = a;  end; e(c); e = (""); return (#(true)), self, e : upper(""), a, (" 	0$ " and {isyieldable=(false)}), (false), ( not (nil));  end;  end; end; local utf8, e = (0xc); if d" " then math{}; while (c : setmetatable()) do local c, b = d; d""; utf8{}; break;  end;  else if (nil) then local table = (nil), b, ((true)<e : pi());  end;  end; if math{[{}]=(false),c} then do os = e;  end; e = (7);  end; function d.sethook () e = c; ( (nil) )((math), (nil)); end;  end; c : __mul((#math), (nil));  end )""; 