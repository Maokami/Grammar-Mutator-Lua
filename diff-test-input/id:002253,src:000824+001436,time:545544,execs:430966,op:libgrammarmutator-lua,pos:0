b = (false), {[(0xd6)]=(nil)}; return (({{(nil),(-( function (...) for self=[[]], ({[c{open=utf8,(0xE),stdin=(false),tmpfile=(true)}]=[[]]}), (#(((table : asin[[]])-(-function () function self:lines (...) e : pi{write=(3.36e97)}; end; return (0xE);  end)))) do if ... then local package, utf8 = ...; for e=(table<=[[]]), ..., ... do string = ((43e-4)); return (((#...))/math);  end;  end; math : loaded[[]]; local d = ""; function string.debug (os) a(); e : G(); end;  end; return ..., (-{(#(-...)),c});  end ){[( function (...) ( function (...) ( function (...) for self=((((93.71))>(0xFABe))%(true)), (string), (#(((table : asin[[]])-(-function () function self:lines (...) e : pi{write=(3.37e24)}; end; return (0xC);  end)))) do if ... then local package, utf8 = ...; for c=(table<=[[]]), ..., ... do string = ((83e-4)); return (((#...))/math);  end;  end; math : loaded[[]]; local d = ""; function string.debug (os) e(); b : G(); end;  end; return ..., (-{(#(-...)),math});  end )();  end ){}; return [[]];  end )((0xf))]=(c-[[]]),G=(true)})}})); 