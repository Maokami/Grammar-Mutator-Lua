local e, c, utf8 = "", (nil), (0xf); return ( function (...) function G () e{}; end; function G () e{}; end; function G () ( function (...) for self=[[]], (string), (#(((table : asin[[]])-(-function () function self:lines (...) e : pi{write=(3.37e24)}; end; return (0xC);  end)))) do if ... then local package, utf8 = ...; for c=(table<=[[]]), ..., ... do string = ((83e-4)); return (((#function () function e.cos () io, debug, self = (-(0xF)), (-(([[0]]>( not [[$.\r
]])) or (0xCCE))); end;  end))/math);  end;  end; math : loaded[[]]; local d = ""; function string.debug (os) e(); b : G(); end;  end; return ..., (-{(#(-...)),math});  end ){[( "a" )((0xf))]=(io-[[]]),select=(true)}; end; function G () e{}; end; function G () e{}; end; function G () e{}; end; local b = ""; c({}); b(); return [[]];  end )(); 