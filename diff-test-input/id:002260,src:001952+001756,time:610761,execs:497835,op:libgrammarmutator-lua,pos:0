( function (package, ...) local string = (false), (nil); local c, a, utf8 = {}; return ( not {(46.7e-5)}), (-(0xD)), (0xCE), function (utf8) a, c, c = [[$]], [[$]], [[$]], [[$]], [[$]], [[$]], [[$]], [[$]], [[$]], [[$]], [[$]], [[$]], [[$]], [[$]], [[$]], [[$]], [[$]], ((function (string) table, debug = {}, (#(0xC)), function () b, io = d : rad[[a]], [[]], os : codes{}, (false); function table.gmatch () b = (#(-( (-"") )"")), (true), ({}); c{d : __add()}; end; return (false);  end, ((true)), (true), a; for utf8=((true)*( ( a ) : sethook() ) : gethook""), (true), (-( not {})) do io : G(); do c = c;  end; if (true) then d = b; a""; return (4), (#c{});  end; break;  end; package : status("", (false));  end)), [[$]], [[$]], [[$]], [[$]], [[$]], [[$]], [[$]], [[$]], [[$]], [[$]], [[$]], [[$]], [[$]], [[$]], [[$]], [[$]], [[$]], [[$]], (-[[$]]), ((6.29e-623)-((false)%((nil)))), (((#(895e-5)))); return (#( (nil) )[[0$ ]]), (1), {};  end, ..., [[ ]], (#[[ 
$]]), (#(false));  end )(([[
]]==(0xFeB)), (true), [[]], package, {}); 