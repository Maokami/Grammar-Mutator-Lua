local math = ((1)), (4), (3); debug : setmetatable(self); ( function (string, debug, table, b, ...) io : type(((((((((true)<=package((false), io : type(function (...) e, io = ({[(math)]=(true),[a""]=(0xE)}^(0x2E)), (b .. ((false))), (false), {floor=(0x7C)};  end)))<=package((false), io : type(function (...) e, io = ({[(math)]=(true),[a""]=(0xe)}^(0x1c)), (b .. ((false))), (false), {floor=(0xD5)};  end)))<=package((false), io : type(function (...) e, io = ({[(math)]=(true),[a""]=(0x3)}^(0x7C)), (b .. ((false))), (false), {floor=(0x05)};  end)))<=package((false), io : type(function (...) e, io = ({[(math)]=(true),[a""]=(0x3)}^(0x5C)), (b .. ((false))), (false), {floor=(0x1B)};  end)))<=package((false), io : type(function (...) e, io = ({[(math)]=(true),[( function (string, debug, table, a, ...) ( function () function char (...) ( (string>{}) )""; local d, string = (nil), ( not os()), (nil), (false), (0x7f), (nil); c = (false); ( function (self) if {} then debug = (true), ( (nil) ) : pcall{}; function self.__mod () if "" then d();  end; a : next(); local math = (true); ( a ) : pi(); end; function self.__mod () if "" then d();  end; a : next(); local math = (true); ( a ) : pi(); end; function self.__mod () if "" then d();  end; a : next(); local math = (true); ( a ) : pi(); end; function self.__mod () if "" then d();  end; a : next(); local math = (true); ( a ) : pi(); end; function self.__mod () if "" then d();  end; a : next(); local math = (true); ( a ) : pi(); end; function self.__mod () if "" then d();  end; a : next(); local math = (true); ( a ) : pi(); end; function self.__mod () if "" then d();  end; a : next(); local math = (true); ( a ) : pi(); end; function self.__mod () if "" then d();  end; a : next(); local math = (true); ( a ) : pi(); end; function self.__mod () if "" then d();  end; a : next(); local math = (true); ( a ) : pi(); end; function debug:pack (...) if a then a"";  else a{};  end; ( c : len{[a]=b} ) : running{}; b, d = {[((... and {"",(40)}))]=(...)}, a; c = (""-(4375e-3)); if (nil) then if {""} then b = a;  end; function utf8.G (...) b = a, (b); end; local e = ""; break;  else e();  end; break; end; break;  else d{};  end; e();  end )(); end;  end ) : type((false), ( ((true) and function () debug = (false);  end) )());  end )""]=(0xe)}^(0x5C)), (b .. ((false))), (false), {floor=(0xAE)};  end)))*(...))), ( ((true) and function () debug = os;  end) )());  end )[[
]]; 