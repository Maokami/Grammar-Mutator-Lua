( function (package, ...) local string = (false), (nil); local c, d, utf8 = package; return ( not function (math) function e.modf (...) while (a : G{io}) do io{(5.568e-0),function () debug = ""; local a = d; return b, c, e;  end}; do a = ""; break;  end; a{}; break;  end; end; for b={}, (65), d do ( (nil) )(("a" .. (false))); break;  end; while (os) do local a, table = (nil), {}, function () io, io = c, b, e;  end, (false); io, os = ("a"), (true); break;  end; while ([[]]) do b : getregistry();  end;  end), ((( debug ) : traceback())), (((((((((((((((((c or ( (68) ) : utf8()) or ( (68) ) : utf8()) or ( (68) ) : utf8()) or ( (68) ) : utf8()) or ( (68) ) : utf8()) or ( (68) ) : utf8()) or ( (68) ) : utf8()) or ( (68) ) : utf8()) or ( (68) ) : utf8()) or ( (68) ) : utf8()) or ( (68) ) : utf8()) or ( (68) ) : utf8()) or ( (68) ) : utf8()) or ( (68) ) : utf8()) or ( (68) ) : utf8()) or ( (68) ) : utf8()) or ( (68) ) : utf8());  end )(([[
]]==((0xA5B))), (true), [[]], package, {}); 