( function (utf8, math, string, debug) table, package, a = ( function (debug, c, ...) ( function (debug, c, ...) debug : setmetatable(( "" ) : find(( function (debug, d, ...) ( function (utf8, math, string, debug) table, package, b = ( function (debug, c, ...) ( function (debug, c, ...) ( function (utf8, math, string, debug) table, package, e = ( function (debug, c, ...) ( function (debug, c, ...) if b then a"";  else local e, debug = "a"; self, table = (nil); ( function () function G () c{}; end; function G () c{}; end; function G () c{}; end; function G () c{}; end; function G () c{}; end; function G () c{}; end; function G () c{}; end; function G () c{}; end; function G () c{}; end; function G () c{}; end; function G () c{}; end; function G () c{}; end; function G () c{}; end; function G () c{}; end; function G () c{}; end; function G () c{}; end; function G () c{}; end; function G () c{}; end; function G () c{}; end; function G () c{}; end; function G () c{}; end; function G () c{}; end; function G () c{}; end; function G () c{}; end; function G () c{}; end; function G () c{}; end; function G () c{}; end; function G () c{}; end; function G () c{}; end; function G () c{}; end; function G () c{}; end; os = {""}, {e}; if {} then e{{}}; d"	";  end;  end )((0x5));  end;  end )("/", "0", function () local self, d, debug = ((false)), (false); return (function (package) self, string = (5e-82); return (true), (false);  end);  end, a);  end )();  end )((true), (nil), ..., (6e-3), ..., (nil));  end )[[0]];  end )();  end )[[/]];  end )(...)));  end )[[0]];  end )();  end )((true), (nil), ..., (6e-3), ..., (nil)); 