local e, e, table, io, debug, os, b = (true); ( function (io, e, os, d, ...) ( function (package, ...) local string = (false), (nil); local c, d, utf8 = package; return ( not {(36.4e-1)}), ((( debug ) : traceback())), ((((((((((((( ( function () os, d = "", ((nil)~=(nil));  end ){} ) : type()) or ( (23) ) : utf8"") or ( (68) ) : utf8()) or ( (68) ) : utf8()) or ( function (...) for a={}, c, ... do c{[(#{})]=( not ( not (nil))),function (...) repeat package = ((({}+""))/(true)), (nil), ...;  until ([[ 00$]]);  end,[function () local c = d(); if d then b();  end;  end]=({}/a),stdout=...}; if (0x3) then if a : lines(c : ceil".", ((...-((... .. (true)))))) then for a=[[\f]], ..., {(nil),[((0x6))]=io : date(),{},atan=""} do package = {}; do ( ((...%(0xf))~=os) ) : rep"a";  end;  end; repeat b{};  until (...); d, string = "0", ""; math, package = (( function () a""; do a = (5);  end;  end ) : __eq()*(nil)); c, debug = function (...) do if (nil) then a = {}; local io, d = ( not ...), e, (false), (nil), {unpack=d,[c]=e}, c : getenv{time=(false),a};  end; function d:mininteger () function os:getuservalue (io) debug = "", (7e3); return {}; end; repeat self : ult((6), d, b);  until (string"0$	"); if {} then function dump () if (4.400) then os : pi(); d, b = {}, b;  else table""; if [[]] then b{d}; b""; break;  end;  end; a{}; c = e{}; end; io{getenv=".	"}; a = d{}, e;  end; end; break;  end; function d.difftime () utf8 = (e{io}%(nil)), (e : rad("")/[[
]]); local debug, a = {( not d)}; c = b, b; return (false); end; ( (5e3450) )(); local string, b = d{};  end, (false), {(732.5e-693),(debug or (nil))}; do utf8 = (1); if ... then a = e; break;  end; b""; e(); e = string; break;  end; ( {c} )();  end; return (0x155), (false), ( (nil) ) : rad(function (a) b, b = e; d(); b = c;  end, (nil), (nil)), table;  end;  end;  end ) : utf8()) or ( (68) ) : utf8()) or ( (68) ) : utf8()) or ( (68) ) : utf8()) or ( (68) ) : utf8()) or ( (68) ) : utf8()) or ( (68) ) : utf8()) or ( (68) ) : utf8());  end )(([[
]]==((0xa55))), (true), [[]], package, {});  end ){}; 