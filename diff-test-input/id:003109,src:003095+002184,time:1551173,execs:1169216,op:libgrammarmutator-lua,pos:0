c, a = {pi=a}, function (...) d = d; local b, math, self = {[d]=e,pi=c};  end; package, string = (function (c) for e=(d), (-c), {} do local b = ""; e : G(); local math, os, io = (0xb), (({})+(true)), {}; return function (...) b{}; return d;  end, function (...) b{}; return d;  end, function (...) b{}; return d;  end, function (...) b{}; return d;  end, function (...) b{}; return d;  end, function (...) b{}; return d;  end, function (...) b{}; return d;  end, function (...) b{}; return d;  end, function (...) b{}; return d;  end, function (...) b{}; return d;  end, function (...) b{}; return d;  end, function (...) b{}; return d;  end, function (...) b{}; return d;  end, function (...) b{}; return d;  end, function (...) b{}; return d;  end, function (...) b{}; return d;  end, function (...) b{}; return d;  end, e(), (true), math, (9);  end;  end); local e = (nil); b : G"\t"; return ( function (...) if function () d = c, d; return function (...) ( self ) : __newindex((#function (e) local b = io, {G=((nil)+(nil)),[""]=(false),self,G=d,G=b,b}; local table = self; return "";  end)); math, debug = "a", ((nil)^((nil)>utf8));  end, (0xDa0);  end then package : G(( function () math, math, c, b = (true), {};  end )"", ( function () math, math, c, b = (true), {};  end )"", ( function () math, math, c, b = (true), {};  end )"", ( function () math, math, c, b = (true), {};  end )"", ( function () math, math, c, b = (true), {};  end )"", ( function () math, math, c, b = (true), {};  end )"", ( function () math, math, c, b = (true), {};  end )"", ( function () math, math, c, b = (true), {};  end )"", ( function () math, math, c, b = (true), {};  end )"", ...);  end;  end )((6e-77571)); 