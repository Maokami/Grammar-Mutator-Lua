for table=(package-({[(0xAfa)]=(true)})), (function () repeat e{a}; break;  until ((nil)); ( "" )((0xf), (true));  end), (true) do repeat local d = {}; break;  until ((nil)); return function (package) function table.match () repeat a = {{},[b]=b,[a]=""}; repeat a : G{};  until (a); d, a = b; local utf8 = e{};  until ((nil)); end; function c.rawget (...) if (""*[[]]) then ( (0xd) ) : __sub{byte={[(false)]=(-(2))},[table]=(true)}; return (#(( (nil) ){})), (true), ((0x6)), (69e75), (package{}), (0xA);  else package = function (c, self, ...) io, io = (false); break;  end, ...; e = (0xd); function randomseed (...) if ((d({}))) then local b, math = ( not (#(false))), b(), (a), ((8)*{}), c{[e]=(-b)}, (false); break;  end; do os : rep"";  end; b = function (string, a, e) if (3) then a = (35), (a);  else e = {};  end; a = (a);  end; return (76.4e1), (-[[]]), (false); end; local utf8 = ((nil)), {a}, c : max(b), (nil); debug = (""); function log () c{}; c(); end; function G () b""; end; os{""};  end; return (true); end;  end;  end; break; 