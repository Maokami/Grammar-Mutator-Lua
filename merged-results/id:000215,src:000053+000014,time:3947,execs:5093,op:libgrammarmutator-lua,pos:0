debug, string, table = ..., function () b = (false), {[(0xd6)]=(nil)}; return (({{(nil),(-( function (...) for self=[[]], (string), (#(((table : asin[[]])-(-function () function self:lines (...) e : pi{write=(3.37e24)}; end; return (0xC);  end)))) do if ... then local package, utf8 = ...; for c=(table<=[[]]), ..., ... do string = ((83e-4)); return (((#...))/math);  end;  end; math : loaded[[]]; local d = ""; function string.debug (os) e(); b : G(); end;  end; return ..., (-{(#(-...)),math});  end ){[( "a" )((#(function () repeat a((false), function () ( function () while (debug) do if d : lines(io, a) then c = os; break;  end; return {};  end;  end ) : stdout(); return [[]], (true), self[[$/]], (false);  end);  until ({pi=((0xe))}); for table=(nil), "", (nil) do while (io) do d(); break;  end; os""; return (nil), [[]], (0xb);  end; e, c, b, package = ..., ((false)), (nil), (0xd), {[((true)>=c)]={[(""~=(-{[(-...)]=[[]]}))]=table,[(nil)]=math(),[(true)]=(nil),__newindex=(false),[[[$../a]]]=((true) .. (((true)))),(0xE),([[]]%("0"-self))}}, (true);  end)))]=(io-[[]]),select=(true)})}}));  end; math[[]]; 