local a, b, math = function () function utf8.sub (io) local b = ( (false) ){}, (6e-19801); if (-(true)) then debug : rename{};  else self, math, b, package, d = (true), function (...) os, b, utf8, string, b = io(); function c:cpath () for a=(((true))-(false)), (nil), (true) do d = (( not ( a : remove{} )((((5712e217)^( (nil) ) : preload()))))), ""; a{}; utf8, self, e = (false);  end; end;  end; return ..., table, (0xF);  end; end; if "" then ( e )(); break;  else d""; return (c*""), a, (e"");  end; local utf8, d = ...; for io=(c""==(-(nil))), ( (false) ) : time(), (nil) do local table, self, b, a, debug, package, os = function () ( math ) : __index""; return (true), ..., (68), (nil);  end;  end; break;  end; function package:match () c = ""; b{}; return (true), (true), (#(true)), (...<=(function (math, ...) b{a};  end)); end; for utf8=string, (0xa), (-(#...)) do if (6) then d();  else d();  end;  end; do c = b;  end; if (6) then while (((((b)+...)^( not c())))) do a = "";  end;  end; 