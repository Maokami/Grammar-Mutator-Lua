repeat local d, e, utf8 = {max={}}, (false); function math:offset () function G () c{}; end; a({}); d""; return [[/]], d; end; local package = ..., ("\r ");  until ((nil)); for package=function (...) local c, e = ( not [[
 
]]), [[	]], table; ( (true) ) : tointeger"/a"; if "0 " then do utf8"$";  end; b""; return ((5e404)+(c~=[[.]]));  else b = (22);  end;  end, ..., (-{[("" and ( not ((false)==...)))]=function (...) if (false) then d{c}; return ..., (-{}), (1);  end; do function pcall () ( (true) ) : os(); break; end;  end; return (-string), function () ( ((-(true))) )((nil));  end, (true), ( not (true)), (4e4032430), (0xb), {};  end,({}==(...-(e>(false))))}) do if ... then package = (#((d)~="")); do b((a));  end; return math;  end;  end; local debug, utf8 = (-(nil)), function (string) ( [[]] ) : move();  end; local c = (#(e)); function e:modf (...) repeat b : G(); e(); break;  until ((nil)); end; 