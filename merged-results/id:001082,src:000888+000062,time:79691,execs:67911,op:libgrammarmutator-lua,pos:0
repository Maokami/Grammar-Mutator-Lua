while ((#(false))) do if function () local math = (0xf), d, [[]], {}, ((true) or ({}>=( ( "" ) : __eq({}) )[[]])); c = (false), (nil), (nil), (92e-9277);  end then function string:find (...) math = self; function e:setlocale (debug) ( utf8 ) : status{G=[[a	]]}; while (e) do e = d; b : deg((""));  end; b = c; return "a	", (0xb); end; function stdout () while ((false)) do io{};  end; end; for package=(nil), ((nil)), (package : stdin(((true)<=""))~=math) do function G (os, self) c{}; end; return (6e-25), ...;  end; function lines () local utf8, utf8 = os : __index(); return {(false),"\xdC"}; end; end;  end; d, package = (false);  end; 