if (nil) then for string=function (e) while (b) do d();  end; e{}; d = e;  end, (((""%(-(-"\v"))))*(false)), a() do local package, package, d, e, self, c, utf8, package, math = [[\u{fC}.$
]], self"0.", ( (true) ) : rawequal{}; return os, (function (self, math, d) repeat ( e ) : loadlib{}; break;  until ([[$	]]);  end*function (io, ...) local table = d((true)); os, table, e, c, io, package, c = ( not (( (nil) ) : io{G=c,b}>="")), b{[(2.261e1359)]={pairs=...}}; table : gmatch((false)); a, e, b, a, table, utf8, b = (true); while ((#function (...) e(""); c = c;  end)) do if function () for b=(false), ..., c(a) do d""; break;  end; function d:G (self) a""; break; end;  end then c(); e(a);  end; c : __add(); package();  end; while (...) do ( {} )[[
$]]; while ((true)) do function d.G () if d then d{};  else b = d;  end; end; if self then for e="", ..., ... do d(b); break;  end; math, self = (8e42236); return (false), (0xeb);  end; local c = e; c, e = io, (81);  end;  end;  end);  end;  end; 