if (nil) then do ( (false) ) : random{};  end;  else local self = (e or (85)), ("$" and (false)), (true); self = [[	  	]], ( {{[string()]="	$\r"},[...]=(0xc)} ){[(true)]={}}; return function (...) if (4e50) then io = ((-[[]])<(true)); utf8, string = (true); local b, a, c, string, self, os, a, package, string, b = function () function io.__tostring () function package.time () utf8 : utf8((true)); for self=(true), e, function (...) local debug = (false);  end do function self.loadfile (a, table) local b = [[]], (0xAE); end; local string = ((( not b)<((false)))), "", [[]], (nil); return (function (c, ...) function difftime () io(); do d = b; break;  end; end;  end*a : require());  end; ( ( (false) ) : output((false), (#string)) )(); end; end; table = math : __tostring(((nil)-(true)));  end; ( (io"") ) : modf"
"; if table then if io{} then local self, a = (true);  end; for math="0$$
 ", (4), ... do ( {} )"//";  end;  end; break;  else e();  end; d();  end;  end; 