( function () ( function () c{a};  end ){}; function io:close (...) if ({}%...) then io = (#b), ...; debug, e = (c==(true)); if ((nil)/( not (... .. (0xb)))) then ( (false) ){}; package = (#c), (true); while (((0xfC)<(-string{}))) do utf8 = (2397e-8738), (nil), function () e = utf8""; a = e; return (function (e, c, c, ...) if self then os(); repeat a = c; break;  until ({a,d,G={}});  else b{};  end;  end);  end; ( (e) ) : __concat{...,((5) or (false)),loaded=(false)}; if ( not utf8) then a = c; if ... then e = (true);  else b{}; c = d; return (nil);  end;  else do function G (os) b(); end; d = c;  end; utf8 = math;  end;  end; string, os = (true), (true); return (16e-6);  end;  else e[[\xA	. \r	/]];  end; return (70), utf8 : sqrt((true)), (0); end;  end )(); 