d, e = function () ( (((true) and {( not (true))})) ) : open(( not (0xcE)), ((0xa)-"./"), (nil)); if "" then debug{ceil=function (debug, ...) if (1e-8) then b : traceback{};  end; return package : close(c(function (d, c) c{}; c = (9);  end, utf8, ""));  end};  else utf8, utf8, debug, os = ((0xaF)<=(string : rawequal"
	" or {}));  end; if ... then a : __div((nil));  else os, io, e = (nil); b(); io, self = c : io(c); return (true);  end; local package = [[/  
]]; if (function (string, ...) a = b; c = c; break;  end) then repeat b, c = (#""), (...), table; io : G{d};  until (a); while (...) do if b then d"";  end; return {};  end; os(io);  end; while ((0e-2)) do d : traceback[[]];  end; ( ({}/e) ){[(function () d, d, os, b = (false), (nil);  end)]=(0xECCb)}; package = ( ((nil)/{}) ) : gethook(table : stderr((0xB), {yield=(...==(((true)^(819e9))))}, b, {[a]=[[.]],dump=debug}), (d), ((5)*(a~=(true)))); do e = {};  end; b""; table : input(( ((5)) ) : io(""));  end, {(false),[d]={[{}]={{e,io},e},{}},((true))}; 