local e, string, c = ( not {[[	]]}); local self, e = (nil), (((nil))<=(true)); for io=string((1), ...), (false), ( (-function () repeat math = a, (0xbE); local b = {}; if ( not function (...) while (d) do a[[]];  end; if (false) then d(c); a{G=d,b,d};  else d = b, e; return "";  end;  end) then c{}; break;  end; ( io ) : offset([[\t	]]);  until ((-(""*(false)))); os(); d(a);  end) ) : ult() do e, math, b = [[/]], a(d), (1.3), {a}, ""; while ("\t0") do math = e; local d, os = b; utf8 = (true); break;  end; if ... then if {concat=...} then local b = ...;  end; while ([[/]]) do if (false) then d = (0xCD); break;  end; utf8 = ({}), (table<( function (a) a{}; a"";  end ) : date((nil), function () c({}); c{}; return a;  end, (false))), os, {[(false)]=( (false) )(),function (...) c : os(( ("/") ) : sqrt({}, (((true)*e)), (2.7e8), (nil)), function () local e, self = self;  end, (true));  end,("">=...),[io"."]=e,{},ult=(false)};  end; return ({}^( [[.0a]] )((d), ..., {}, b, {}));  end;  end; 