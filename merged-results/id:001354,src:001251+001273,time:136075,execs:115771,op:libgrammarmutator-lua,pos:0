local io = (true); function table.rawget (table, ...) local math, d = (false), ...; c, e, math, self, self = " a", (true); if (false) then ( function () ( function () c{a};  end ){}; function io:close (...) if ({}%...) then io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; io = (#b), ...; debug, e = (c==(true)); os = {d};  else e[[\xA	. \r	/]];  end; return (70), utf8 : sqrt((true)), (0); end;  end ){a}; d = ({}%(nil));  else debug, e, c = io : error(); return ((e) or table);  end; return ({}+( not function (...) function preload (...) if (false) then local table, utf8 = ((nil)/""), e; return c;  else c"";  end; break; end; c""; return a;  end)); end; 