local io = (true); function table.rawget (table, ...) local math, d = (false), ...; c, e, math, self, self = " a", (true); if (((true)) or [[]]) then function charpattern () function gsub () package, d = (-("")), ""; end; local a, a = c, d; local a, a = c, d; local a, a = c, d; local a, a = c, d; local a, a = c, d; local a, a = c, d; local a, a = c, d; local a, a = c, d; local a, a = c, d; local a, a = c, d; local a, a = c, d; local a, a = c, d; local a, a = c, d; local a, a = c, d; local a, a = c, d; local a, a = c, d; local a, a = c, d; local a, a = c, d; local a, a = c, d; local a, a = c, d; local a, a = c, d; local a, a = c, d; local a, a = c, d; local a, a = c, d; local a, a = c, d; local a, a = c, d; local a, a = c, d; local a, a = c, d; local a, a = c, d; local a, a = c, d; local a, a = c, d; local a, a = c, d; local a, a = c, d; c = (nil); end; return ( (82.3e059) )([[]]);  end; return ({}+( not function (...) function preload (...) if (false) then local table, utf8 = ((nil)/""), e; return c;  else c"";  end; break; end; c""; return a;  end)); end; 