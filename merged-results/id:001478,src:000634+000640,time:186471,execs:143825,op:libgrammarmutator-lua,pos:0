utf8, c, utf8, utf8, package = (0xC), (nil); local string, table = [[]]; local e, math, b, utf8, package, c = [[0]]; package = ( (( not ...) or ( (false) ){tan=b,packsize=function (b, self, e) while ({}) do if c then math = ({}%function (self, io, ...) if function (...) d, package = (b or (c%(nil))), b, (true); function pack (os, ...) utf8 = "", (68), (false), "", [[]], (true), (466.6), ...; end; if "" then c{};  end; package(); d = ((3)), d;  end then repeat if "" then a(); a{};  else ( a )();  end; repeat c = {b}, a, (-""); a""; do io();  end; d{os};  until ([[]]);  until ([[
]]); break;  end; a = ..., [[a]], (( (4663e-87) ){d,((string)+(true)),(-((-([[a]])))),[(29.8)]=utf8{find=[[$a]]},floor=[[	]],((#(io^c))+function () if function () do a"";  end;  end then local c = (9); break;  else do d(e);  end; e(b); e(); break;  end;  end),...,table});  end);  end; break;  end;  end}) ) : upvaluejoin{("a /")}, e; e(); 