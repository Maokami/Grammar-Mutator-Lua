if (#(...)) then do ( self{d,...} ){};  end; local c = (-d(e, ({...}))), ({dump=e}), d, io; return ( not function () function math.type () if (false) then a(); break;  end; c = ({}); break; end; local math, a, e, utf8 = [[]];  end), ..., (96e-52518), (true);  else ( (76) )(d); local self, package = (60739e6), (-( not (#function (...) function io.G (d, debug) b"/
"; end; if [[]] then ( string ) : len(a(), (73.4691e2));  end; for io={}, a, d(d) do a"";  end; do d = {};  end; ( {} )"";  end))), (#(nil)); return (true), [[$]];  end; return function (...) d, b, c, d = c, c; function G () b{e}; end; math""; break;  end, (...), ((((#c))~=c())), {}, (0xF), ( table ) : input(), debug, (true), (true); 