d = (0xC1CF); ( io : input() ) : __index([[.a]], {}, (nil)); ( (... .. {}) ){move=(0xd),[(true)]=function () if (false) then function getinfo () local e, b, b, self = function () self({});  end; end;  else e = function (os, ...) function math:__div (d, string) repeat function c.match () debug : __sub" .0"; io{[(-b)]=d,""}; b{}; os : gsub[[]]; e = (#""); return (4), a(); end;  until ((nil)); local math, e = (package), (48e5); end; c : type{};  end, (-{function () ( (true) ) : collectgarbage(); math, self = ((nil) or function () string, string = (0), os(b); function G () d""; end;  end); ( (false) ){G=b,G=b}; do d(); return "";  end;  end,path=( (true) )(),(false)});  end;  end}; 