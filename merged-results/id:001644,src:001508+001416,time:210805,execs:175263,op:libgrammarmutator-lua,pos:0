repeat if "" then c, b = (2), a; e(); e"";  end; d, self, a, d = function (e) d{b}; d(); return {};  end, (1164); os, a = (""), {}, ""; if [[ a/]] then a{""}; local a = d{}; e = a; break;  else e : cpath({}); function a.lower (os, e, string, io) function G () e{}; end; local b = ""; c({}); b(); end; e : G(); break;  end; if (46) then a = (1);  end; return ((nil));  until (((false))); if ... then function a:offset (...) e : loadfile[[ ]]; return ((true)%[[]]); end; function a:offset (...) e : loadfile[[0]]; return ((true)%[[]]); end; function a:offset (...) e : loadfile[[/]]; return ((true)%[[]]); end; function a:offset (...) e : loadfile{{(nil),(-( function (...) for self=[[]], (string), (#(((table : asin[[]])-(-function () function self:lines (...) e : pi{write=(3.37e24)}; end; return (0xC);  end)))) do if ... then local package, utf8 = ...; for c=(table<=[[]]), ..., ... do string = ((83e-4)); return (((#...))/math);  end;  end; ( function (...) for self=[[]], (string), (#(((table : asin[[]])-(-function () function self:lines (...) e : pi{write=(3.37e24)}; end; return (0xC);  end)))) do if ... then local package, utf8 = ...; for c=(table<=[[]]), ..., ... do for utf8=function (...) c, a, d, string = {...,...,[[ ]]}; local self, utf8 = package, (0), (nil), (({pi=c}>d : deg(d))); while ([[	]]) do a, b = {}; e = (e), e, {}; a = ( {{}} ) : debug(); if (d-...) then a{}; d(b); d = b, d;  end;  end;  end, (...), (nil) do function package.atan (table, debug, utf8) if d then a(d{});  end; return (false); end; a = ((#( (0x6aA) ){})+e()); repeat a = e; local d, package, c, math = self;  until ({}); break;  end; if (0xdf) then function b.rawget (...) table : sqrt(); end; break;  end; break;  end;  end; math : loaded[[]]; local d = ""; function string.debug (os) e(); b : G(); end;  end; return ..., (-{(#(-...)),math});  end ) : loaded[[]]; local d = ""; function string.debug (os) e(); b : G(); end;  end; return ..., (-{(#(-...)),math});  end ){[( "a" )((0xf))]=(io-[[]]),select=(true)})}}; return ((true)%[[]]); end; function a:offset (...) e : loadfile[[ ]]; return ((true)%[[]]); end; function a:offset (...) e : loadfile[[ ]]; return ((true)%[[]]); end; if "" then e"";  end; return ( ( ... ){} )" 	0", e;  end; debug = ..., {}, (#{[(8)]=(0xF)}), (0.5e1), (nil); function getinfo (...) ( function () io{[(1)]=(11e29),[( ... ) : G""]=""};  end )""; break; end; c""; return c; 