if ( function (self) if {} then string, self, string, e, a, io, package = function () local c = io, (table), ( function (utf8, io) b(); function preload (...) for c="", " ", function () function self._VERSION () io((true), function (...) a = (-(0xf)), (nil); e"\f"; io = {}, ...; return ...;  end); end;  end do do b{}; c{}; do b(); return b, d, e;  end;  end; return (nil);  end; d = b, (d); b : pi" "; b[[]]; end;  end )((nil), ({}), (false), (".")); return function (...) while ((0xaB)) do if (#(false)) then os = ...; break;  else b = ((-((-(81))))~=""), {};  end; function string:gsub (...) if a then d{}; os();  end; do a();  end; local os, io, package = {}, (function (...) d(); e"";  end); end; a(); c""; return (false);  end;  end;  end; break;  else d{};  end; e();  end )"" then c{}; return a;  end; break; 