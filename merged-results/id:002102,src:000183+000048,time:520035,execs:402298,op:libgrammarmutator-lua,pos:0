if e then if (0xBaf) then utf8, os, b, e, math = {[((nil))]=function () d, os, os, os, package, e = (1), (9e04), (true);  end,packsize=(#...),{getinfo=(-...),find=((79.3e8)^(0xcF)),{}},[(true)]=(0x1)}; function io:pack () if (true) then b""; return (io : exp{});  end; if "0\f" then local debug = string; b(); if ((nil)) then d = a : format(( not a()), d, os), io""; return ((io)/"$a. 0"), (638);  else function string.wrap (...) if (#self) then e{};  end; local d, d = (6); e : io(c); break; end;  end;  end; do for io=package, {}, (table>utf8) do for e=..., ..., [[aa]] do package, c = ".\za
";  end; if ((...)=={}) then local b, package, d, e, d = (-( "" ) : next());  else local self = {(((nil))>(true))}, (true); break;  end; local string, c = (true); for math=io, ( not (-(false))), {[{}]=(false),{({[b]=""}),{},b,e},...,G=b} do while ({G=e,d}) do if os : G{} then b();  end; do os = b;  end;  end;  end; local b = table; if a then c{c};  end;  end;  end; end;  end; io = [[0]], (true), ...;  end; a = (false); return (2.2e-89), utf8; 