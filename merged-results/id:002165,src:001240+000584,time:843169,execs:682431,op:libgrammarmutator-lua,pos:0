local b, utf8, b, io = c; local table, debug = function () repeat while ({}) do e = d, {}; d = function () repeat if table then local a, string, e, c = "", ( (true) )((true)); function utf8:cos () repeat a(e);  until ((9)); c{}; self = "\a "; end; local package = {[(4)]=""}; a = self; function G (d) b(""); end; a""; c{}; d = e;  end; ( (false) )((false)); c : match();  until (math);  end; break;  end; math : pi{}; local e = ""; return c : tmpname{};  until ((0xC));  end; function e.codes (...) if {} then table(); if (false) then local utf8, utf8 = (false); package = c, (-a), "", (0xC);  end; return ..., (#(io));  end; debug = (nil); end; 