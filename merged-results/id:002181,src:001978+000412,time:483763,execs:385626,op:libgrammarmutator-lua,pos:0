debug : gethook({[(6871)]=(false)}); ( function (d, c) function getinfo () local b = (nil); local table, a, c, c, utf8, table, e = function (e, e, package) ( ((debug"/"~=function () function math:type (debug, self, ...) function debug.rawequal () while (".") do io({[(true)]=(true)}); return ( function () repeat d(); break;  until (({})); return c, function () a = "";  end;  end ) : traceback((0xbA), ( not (false)), {[function () os : os{c}; a{a}; return a;  end]=( not (nil))});  end; local package, b, io, c = (false), (0xD), (nil), (false); end; end;  end)<(true)) )[[]]; for debug=( not (nil)), [[]], (nil) do repeat function b:remove (...) function pi () c{e}; e(); c = ""; end; do a"";  end; b = os; end; d"";  until (os); break;  end; return self, ((0xB));  end; end;  end ){}; 