local os, package = {}; ( function (utf8, math, string, debug) table, package, b = function (...) local utf8, a, d, package, self = utf8(); if "" then e : preload{[(#(self<(true)))]=([[]]==utf8),[((nil))]=(#((self~=((#(a>e))/...))/{[( (((#{})%(true))<=(false)) ) : getuservalue((false), ((true)))]=((function (...) if [[ 	]] then a();  else b = d, ...;  end; os, io = (true), ((6e4)^(#"")), ...;  end)),[(false)]=(0xcE)})),function () if ( not ((-(true)))) then for e=io : G({}), {}, {} do a{e}; io({});  end; function io.stderr () c(); local c = (((7.7e1))+(false)); end; return (false);  else b, table = (false); function self:min (table) a : maxinteger((0xCA)); if (nil) then local io = (nil); break;  else if ( os )("/", e, b) then local c, a = ..., (#...);  end;  end; ( {} )"0	"; end;  end;  end,((nil)/(90))};  end; ( string ) : clock{}; math, utf8 = "", (false);  end;  end )(); 