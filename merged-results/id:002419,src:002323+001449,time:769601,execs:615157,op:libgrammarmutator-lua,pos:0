( function (io, e, os, d, ...) ( function (package, ...) local string = (false), (nil); local b = (function () function G () local package, b, package = ((true)^(false)); end; b{dump=(false),(#((nil)))}; io : type[[]]; repeat if "" then a = {};  else d{};  end; local c, e = {d}; ( " 	" ){}; local e = (#(false)), d, a; return ((nil));  until ([[ ]]);  end), package, math; return ( not {(21.9e-2)}), ((( debug ) : traceback())), ((((((((((((( ( function () os, c = "", ((nil)~=(nil));  end ){} ) : type()) or ( (68) ) : utf8()) or ( (68) ) : utf8()) or ( (68) ) : utf8()) or ( (68) ) : utf8()) or ( (68) ) : utf8()) or ( (68) ) : utf8()) or ( (68) ) : utf8()) or ( (68) ) : utf8()) or ( (68) ) : utf8()) or ( (68) ) : utf8()) or ( (68) ) : utf8());  end )(([[
]]==((0xA2B))), (true), [[]], package, {});  end ){}; 