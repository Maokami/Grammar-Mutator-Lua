local c = ( not (true)), (0xebeaeFf); for table=(#(c or math" ")), (false), "" do ( {} ) : close{((io{}))}; local c, b, self, package = os, function (...) math(); return (0x5dF7);  end; function G () a""; end; function self.stdin (e, self, ...) local c = c""; d = d; end; break;  end; while ((false)) do if function () table, math, table, c, math = {};  end then repeat local e, io, c = ..., b; table = function () e = c;  end; repeat local c = io, d; b = function () e = c;  end; b = function () e = c;  end; b = function () e = c;  end; b = function () e = c;  end; b = function () e = c;  end; b = function () e = c;  end; b = function () e = c;  end; b = function () e = c;  end; b = function () e = c;  end; b = function () e = c;  end; b = function () e = c;  end; b = function () e = c;  end; b = function () e = c;  end; b = function () e = c;  end; b = function () e = c;  end; b = function () e = c;  end; b = function () e = c;  end; b = function () e = c;  end; b = function () e = c;  end; b = function () e = c;  end; b = function () e = c;  end; b = function () e = c;  end; b = function () e = c;  end; b = function () e = c;  end; b = function () e = c;  end; b = function () e = c;  end; b = function () e = c;  end; b = function () e = c;  end; b = function () e = c;  end; b = function () e = c;  end; b = function () e = c;  end; b = function () e = c;  end; b = function () e = c;  end; b""; break;  until ({}); break;  until ({}); return (0xFaFe);  end;  end; 