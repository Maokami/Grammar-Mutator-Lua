( function (...) e, self, table, e = {G={},(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{[( function (...) ( function (...) ( function (...) for self=((((93.71))>(0xFABe))%(true)), (string), (#(((table : asin[[]])-(-function () function self:lines (...) e : pi{write=(3.39e57)}; end; return (0xf);  end)))) do if ... then local a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, c, utf8, table, e = ...; for e=(table<=[[]]), ..., ... do string = ((83e-4)); return (((#...))/math);  end;  end; math : loaded[[]]; local d = ""; function string.debug (os) e(); b : G(); end;  end; return ..., (-{(#(-...)),math});  end )();  end ){}; return [[]];  end )((0x9))]=(c-[[]]),G=(true)}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),(#{}),{}};  end ){}; 