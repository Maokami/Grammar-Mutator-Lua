( function (a, math, self, ...) ( function () d = b; ( function (...) ( function (c, e, ...) ( function (...) ( function (...) ( function (...) for self=((((93.71))>(0xFABe))%(true)), (string), (#(((table : asin[[]])-(-function () function self:lines (...) e : pi{write=(3.39e57)}; end; return (0xf);  end)))) do if ... then local package, utf8 = ...; for e=(table<=[[]]), ..., ... do string = ((83e-4)); return (((#...))/math);  end;  end; math : loaded[[]]; local d = ""; if ((06e8)) then c, d, d, d = (a==d), string; break;  else function dump () repeat ( (true) )((true));  until ([[/]]); e = (nil), (nil); while (function () d : pi{function () e : modf(d);  end}; return function () e((nil)); b""; e();  end;  end) do package : stderr"$"; local b = ( package ) : getuservalue(package); io = (({(true)}%((0xBe)))), (-{}); ( (false) ) : upvalueid();  end; end; local d = ((false)); repeat if table then a = b;  end; break;  until (((false)%((false)-(false))));  end;  end; return ..., (-{(#(-...)),math});  end )();  end ){}; return [[]];  end )();  end ){};  end ){}; os = a;  end )();  end ){}; 