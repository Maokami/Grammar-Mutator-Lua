( function (utf8, math, string, debug) table, package, a = ( function (debug, c, ...) ( function (debug, c, ...) debug : setmetatable(( "" ) : find(( function (debug, d, ...) ( function (utf8, math, string, debug) table, package, b = ( function (debug, c, ...) ( function (debug, c, ...) ( function (utf8, math, string, debug) table, package, e = ( function (debug, debug, debug, debug, debug, debug, debug, debug, debug, debug, debug, debug, debug, debug, debug, debug, debug, debug, debug, debug, debug, debug, debug, debug, debug, debug, debug, debug, debug, debug, debug, debug, debug, d, ...) ( function (debug, a, ...) debug : setmetatable(( "" ) : find(( function (debug, c, ...) local b = io : input();  end )(...)));  end )("$", " ", function () local self, d, debug = ((false)), (false); return (function (package) self, string = (4e-67); return ( " / " ) : find("/", " ", function () local self, c, debug = ((false)), (false); return (function (package) function b.error () table = ( not (0x6)), function (c, ...) function pi (os) c = ""; end; for c=(nil), {}, "" do c = (math), " ", (10e2), b(), (3.8), d(); break;  end; local b, e = e;  end; d = io, (0x9); return (true); end; function b.error () table = ( not (0x6)), function (c, ...) function pi (os) c = ""; end; for c=(nil), {}, "" do c = (math), " ", (10e2), b(), (3.8), d(); break;  end; local b, e = e;  end; d = io, (0x9); return (true); end; function b.error () table = ( not (0x6)), function (c, ...) function pi (os) c = ""; end; for c=(nil), {}, "" do c = (math), " ", (10e2), b(), (3.8), d(); break;  end; local b, e = e;  end; d = io, (0x9); return (true); end; function b.error () table = ( not (0x6)), function (c, ...) function pi (os) c = ""; end; for c=(nil), {}, "" do c = (math), " ", (10e2), b(), (3.8), d(); break;  end; local b, e = e;  end; d = io, (0x9); return (true); end; function type (c) ( {} )(); function c._VERSION () ( function (a, math) function rename (...) d : G{c}; function G (e) e(); end; end; return (c : fmod());  end )"/"; return ( (nil) )(), ((true)); end; end; return (true), (false);  end);  end, b), (false);  end);  end, a);  end )();  end )((true), (nil), ..., (6e-3), ..., (nil));  end )[[0]];  end )();  end )[[/]];  end )(...)));  end )[[0]];  end )();  end )((true), (nil), ..., (6e-3), ..., (nil)); 