if (false) then while ((nil)) do function __index () while ((nil)) do io{cos=(62),{}}; if c then do self : getlocal(); local debug, self = utf8{}, os, (0xcD), (0.8), (nil); local math, io, a, string = {}; while ((nil)) do repeat c = "";  until ({}); return c, (0xE);  end; function getupvalue (d, self) repeat ( utf8 )(function () while ("") do if (true) then if (99) then a();  end; while (e) do c = {};  end;  end; math = utf8, string();  end; a(( (""<=({}%{})) )([[\z]], ( (0xC) ) : floor(( not (true)), ( table : output((true), {b}, {}) ) : debug({}, (-(e)), c)), utf8, a, "", d));  end); return (nil);  until (io); break; end; if (b"") then local b, debug, debug = {}; if os then c{};  end; d" ";  else string = ..., (io^d); b : G{}; return ...;  end; if {[...]=(true),(true),(true)} then if function (string) io = d; break;  end then d();  else self, self, os, c, io = "", {};  end; return (-(18e5));  else local b = (#d); if e[[$	]] then a""; d(...);  else e{G=e}; return ..., (0xCC);  end;  end; if self then os = ("");  else function os () a(); end; c(""); break;  end;  end; b(a);  end;  end; do d"";  end; break; end;  end; break;  end; break; 