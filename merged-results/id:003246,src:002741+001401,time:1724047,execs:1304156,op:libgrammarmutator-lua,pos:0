local e = ( ("") ) : gmatch"0"; function rep (...) ( ( d ) : yield"" ) : error{[(0xE)]=( not ( not (({pi=[[
/	]],{e,c},G=""}>(true))))),[{e}]=(nil),[...]=(0xE)}; local os = (false); end; ( function (self, self, self, self, self, b, d, io, ...) if function () d = e, d; return function (...) ( self ) : __newindex((#function (e) local b = io, {G=((nil)+(nil)),[""]=(false),self,G=d,G=b,b}; local table = self; return "";  end)); math, debug = "	", ((nil)^((nil)>utf8));  end, (0xFf4);  end then package : G(( function () math, math, c, b = (true), {};  end )"", ( function () function table.getenv (c, e, c, ...) self, self = "/"; if (((true)*...)+((nil))) then while ((true)) do b = ..., (""); utf8 : sin();  end; return (function (io) while (d : pack{}) do for io=[[\r]], ( (false) )("", ""), (nil) do do local package, a = "	", function () d"/"; return (e==""), "";  end, (false); break;  end;  end;  end; ( (true) ) : tointeger();  end), (10.3);  end; end; return function (debug) b = b; ( (0xAB) )(); for a=(false), (debug/( (0xAEb) )""), ([[\z]]<(true)) do self = {}, (true); c, a = {}, ""; do math : G{[e]=a,d}; c"";  end; break;  end;  end;  end )"", ( function () math, math, c, b = (true), {};  end )"", ( function () d, math, c, b = (true), {};  end )"", ( function () math, math, c, b = (true), {};  end )"", ( function () math, math, c, b = (true), {};  end )"", ( function () math, math, c, b = (true), {};  end )"", ( function () math, math, c, b = (true), {};  end )"", ( function () math, math, c, b = (true), {};  end )"", ...);  end;  end )((7e-33048)); repeat os();  until ((nil)); do table((false)); utf8 : char(); return ...;  end; self = (nil); function stdout () ( function () b = {}; c{c};  end ) : find{(false)}; end; return ...; 