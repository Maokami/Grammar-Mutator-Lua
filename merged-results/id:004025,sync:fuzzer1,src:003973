( ([[0$	
a	\b	]]) ) : gsub([[]], (function (package, package, package, package, package, package, package, package, package, ...) local b = (true), debug; return ((nil)==((nil)==((nil)==((nil)==((nil)==((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((nil)==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e))==((nil)==e)))))));  end)); 