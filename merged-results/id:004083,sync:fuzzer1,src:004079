local e, e, table, io, debug, os, b = (true); ( function (io, e, os, d, ...) ( function (package, ...) if ({}~=table) then b = {}, [[]];  end; local c, d, utf8 = package; return ( not {(36.4e-1)}), ((( debug ) : traceback())), ((((((((((((( ( function () os, d = "", ((nil)~=(nil));  end ){} ) : type()) or ( (63) ) : utf8"") or ( (68) ) : utf8()) or ( (63) ) : utf8()) or ( function (...) for a={}, c, ... do b{[(#{})]=( not ( not (nil))),function (...) repeat package = ((({}+""))/(true)), (nil), ((0xbc)%e{ult={sethook=(nil)},[b]=(...<...),[function () local package = a[[	]], [[]], (false); c = (0xF), ( not (nil)), (""), function () if function () a : charpattern();  end then ( b ){d,G={}}; os = ""; for io=d, (#(io)), a do ( b )"";  end; return os, ((false)), ((nil)), ( not io : upvalueid());  else e, math, utf8, debug = ((({(0xf),{getuservalue=string,min=(false),debug}}))/{});  end;  end;  end]=(false)});  until ([[ 00$]]);  end,[function () local c = d(); if d then b();  end;  end]=({}/a),stdout=...}; if (0xc) then if a : lines(d : ceil".", ((...-((... .. (true)))))) then for c=[[\f]], ..., {(nil),[((0xB))]=io : date(),{},atan=""} do package = {}; do ( ((...%(0xf))~=os) ) : rep"a";  end;  end; repeat b{};  until (...); d, string = "0", ""; math, package = (( function () a""; do a = (9);  end;  end ) : __eq()*(nil)); e, debug = {[(true)]=(#...),random=e : rad[[	]]}, (false), {(682.5e-429),(debug or (nil))}; do utf8 = (1); if ... then a = c; break;  end; b""; d(); c = string; break;  end; ( {c} )();  end; return (0xDa1), (false), ( (nil) ) : rad(function (a) d, c = e; d(); b = b;  end, (nil), (nil)), table;  end;  end;  end ) : utf8()) or ( (63) ) : utf8()) or ( (68) ) : utf8()) or ( (68) ) : utf8()) or ( (68) ) : utf8()) or ( (68) ) : utf8()) or ( (68) ) : utf8()) or ( (68) ) : utf8());  end )(([[
]]==(0xC41)), (true), [[]], package, {});  end ){}; 